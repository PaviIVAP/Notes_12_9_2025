ansible variables:
type1:direct printing
vars:
  my_name: "Alice"
tasks:
  - name: Show my name
    debug:
      msg: "My name is {{ my_name }}"


----------------------------------------
type2:using loops direct values 
vars:
  fruits:
    - Apple
    - Banana
    - Cherry
tasks:
  - name: Loop through fruits
    debug:
      msg: "Fruit: {{ item }}"
    loop: "{{ fruits }}"

------------------------------------------------
type3:directly using the user.name to get the values 
vars:
  user:----this one 
    name: john
    shell: /bin/bash
    uid: 1010
tasks:
  - name: Show user info
    debug:
      msg: "User {{ user.name }} uses {{ user.shell }} with UID {{ user.uid }}"

------------------------------------------------------
type4:using loops for dictionary with items
vars:
  users:
    - name: alice
      shell: /bin/bash
    - name: bob
      shell: /bin/zsh
tasks:
  - name: Loop through user list
    debug:
      msg: "User {{ item.name }} uses {{ item.shell }}"
    loop: "{{ users }}"
-------------------------------------------------------------
type5:using dict2items and loops


---
 - name:Looping over dict
   hosts: all
   become: yes
   

   vars:
     users:
        user1: 
           shell: /bin/bash

        user1:   
           shell: /bin/zsh
   tasks:
     -  name: Create users
        user:  
          name: "{{ item.key }}"
          state: present
          shell: "{{ item.value.shell }}"
        loop: "{{ users | dict2items }}"   




-------------------------------------------------------------------------------------------

diff btw lookups, vars,  vars_files, template
lookups:

Concept	:

vars:	        Inline values and dynamic, Used in playbooks for quick vars.
vars_files:	Fetch vars from another file and dynamic , Pulls from external YAMLs.
template:	Uses Jinja2, loops, replaces file fully with rendered values, It dynamically fills placeholders and replaces the file on the target.
lookup	:       Used to fetch the file fully	, It's used to fetch data, not always full files.
 For example:
- lookup('file', 'path') → fetches file contents
- lookup('env', 'HOME') → fetches environment variable
- lookup('pipe', 'date') → runs command and fetches result



-----------------------------------------------------------------------------------------------------
Folder/File	Purpose
ansible.cfg	Configuration file to define inventory, vault file, etc.
vault_pass.txt	Stores vault password for auto decryption
inventory/hosts.ini	List of hosts/groups Ansible will manage
group_vars/webservers.yml	Variables applied to the group [webservers]
host_vars/web01.yml	Host-specific variables for web01
secrets/vault.yml	Encrypted secrets using Ansible Vault
playbooks/site.yml	Main playbook to execute roles and tasks
users/tasks.yml	Task file for user creation and SSH setup
roles/webserver/	Role that installs & configures nginx, sets hostname, opens firewall
roles/webserver/tasks/main.yml	Main task list for the webserver role
roles/webserver/handlers/main.yml	Handlers like restarting nginx
roles/webserver/templates/	Contains Jinja2 templates like nginx.conf.j2
roles/webserver/files/	Static files like index.html
roles/webserver/vars/main.yml	Variables specific to the role
roles/webserver/defaults/main.yml	Default values for role vars
README.md	Documentation for your project


